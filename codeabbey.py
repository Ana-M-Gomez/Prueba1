# -*- coding: utf-8 -*-
"""Copia de CodeAbbey

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-LkciDLLbCyns6ZTl0Y7PByIEMUzUEd9
"""

y=input('Ingrese los números a convertir: ').split()
p=[float(i) for i in y]
convertidos=[]
for x in p:
  m=int(x*6)+1
  convertidos.append(m)
print(convertidos)

def digitos(n):
  d=[]
  while n!=0:
    m=n%10
    d.append(m)
    n=n//10
    r=d[::-1]
  return r
digitos(672)

def suma(n):   
    sum = 0
    while (n != 0):     
        sum = sum + (n % 10) 
        n = n//10    
    return sum

def redondeo(n):
  if n-int(n)<0.5:
    n=int(n)
  else:
    n=int(n)+1
  return n

x=int(input('Ingrese la cantidad de rectas por buscar: ',))
n=0
list=[]
while n<x:
  n=n+1
  y=input('Ingrese las parejas en la recta: ').split()
  p=[int(i) for i in y]
  a=(p[1]-p[3])//(p[0]-p[2])
  b=p[1]-a*p[0]
  c=(a,b)
  list.append(c)
print(list)

x=int(input('Ingrese la cantidad de fechas a comparar: ',))
n=0
list=[]
while n<x:
  n=n+1
  y=input('Ingrese las parejas en la recta: ').split()
  p=[int(i) for i in y]
  a=p[0]*86400
  b=p[1]*3600
  c=p[2]*60
  d=p[3]
  e=p[4]*86400
  f=p[5]*3600
  g=p[6]*60
  h=p[7]
  r=((e+f+g+h)-(a+b+c+d))//86400
  s=(((e+f+g+h)-(a+b+c+d))%86400)//3600
  t=((((e+f+g+h)-(a+b+c+d))%86400)%3600)//60
  u=((((e+f+g+h)-(a+b+c+d))%86400)%3600)%60
  v=(r,s,t,u)
  list.append(v)
print(list)

x=str(input('Ingrese el número inicial: ',))
y=input('Ingrese las operacions y números a operar: ').split()
p=[i for i in y]
print(p)
n=0
l=x
while n<len(p):
  l=str('('+l+p[n]+p[n+1]+')')
  n=n+2
print(l)

x=input('Ingrese el vector: ').split()
y=[int(i) for i in x]
result=0
for i in y:
  result=(result+i)
  result=result*113
  result=result%10000007
print(result)

x=int(input('Ingrese casos a trabajar: ',))
n=0
list=[]
while n<x:
  n=n+1
  p=0
  y=int(input('Ingrese el número al que le va a aproximar la raíz: '))
  m=int(input('Ingrese el número de veces que quiere iterar: '))
  r=1
  while p<m:
    p=p+1
    r=(r+y/r)/2
  list.append(r)
print(list)

a=('1')
b=('2')
c=('3')
d=('4')
e=('5')
y=input('Ingrese la secuencia a trabajar: ').split()
w=[str(i) for i in y]
v=[c for c in w if c in a ]
p=[c for c in w if c in b ]
q=[t for t in w if t in c ]
s=[c for c in w if c in d ]
r=[c for c in w if c in e ]
print(len(v),len(p),len(q),len(s),len(r))

x=input('Ingrese los números a trabajar: ').split()
p=[int(i) for i in x]
list=[]
for n in p:
  cont=0 
  while n!=1:
    cont=cont+1
    if n%2==0:
      n=n/2
    else:
      n=(3*n)+1   
  list.append(cont)        
print(list)

x=input('Ingrese el vector: ').split()
y=[int(i) for i in x]
def check_sum(data):
    result = 0
    for number in data:
        result += number
        result *= 113
        result %= 10000007
    return(result)
cont=0
n=0
for n in range(len(y)):
    if n<len(y)-1:
        if y[n+1]<y[n]:
            cont=cont+1
            y.insert(n, y[n+1])
            del y[n+2]
print(cont, check_sum(y))

n=int(input('Ingrese el tamaño de la matriz: '))
x=input('Ingrese el vector: ').split()
y=[int(i) for i in x]
flag = False
count=0
cont=0
while not flag:
  flag = True
  for i in range(n-1):
    if y[i] > y[i+1]:
      flag = False
      count += 1
      y.insert(i, y[i+1])
      del y[i+2]
  cont += 1
print(cont, count)

def mcd(a,b):
        while b:      
                a, b = b, a % b
        return a
x=int(input('Ingrese la cantidad de parejas que va a trabajar: ',))
n=0
list=[]
while n<x:
  n=n+1
  y=input('Ingrese las parejas: ').split()
  p=[int(i) for i in y]
  MCD=mcd(p[0],p[1])
  MCM=(p[0]*p[1])//MCD
  c=(MCD,MCM)
  list.append(c)
print(list)

x=input('Ingrese el vector: ').split()
y=[int(i) for i in x]
flag = False
while not flag:
  flag = True
  for i in range(len(y)-1):
    if y[i] > y[i+1]:
      flag = False
      y.insert(i, y[i+1])
      del y[i+2]
print(y)

x=input('Ingrese el vector: ').split()
y=[int(i) for i in x]
w=y.copy()
flag = False
while not flag:
  flag = True
  for i in range(len(y)-1):
    if y[i] > y[i+1]:
      flag = False
      y.insert(i, y[i+1])
      del y[i+2]
orden=[]
for j in y:
        for x in range(len(y)):
            if j == w[x]:
                orden.append(int(x+1))
print(orden)

x=int(input('Ingrese la cantidad de casos que va a trabajar: ',))
n=0
list=[]
while n<x:
  n=n+1
  y=input('Ingrese la k y la pareja: ').split()
  p=[i for i in y]
  m=int(p[0])
  k=p[1]
  if m>0:
    Lfirst = k[0 : m]
    Lsecond = k[m :]
    r=Lsecond + Lfirst
    list.append(r)
  else:
    Rfirst = k[0 : len(k)+m] 
    Rsecond = k[len(k)+m : ] 
    r=Rsecond + Rfirst
    list.append(r)
print(list)

x=int(input('Ingrese la cantidad de casos que va a trabajar: ',))
y=0
list=[]
u=[]
while y<x:
  y=y+1
  l=str(input('Ingrese la cadena: '))
  u.append(l)
for i in u:
    demo=i
    m=demo.replace(',', "") 
    n=m.replace('-','')
    o=n.replace('!','')
    p=o.replace(" ", "")
    word = p.lower()
    if str(word) == "".join(reversed(word)) :
      list.append('Y')
    else:
      list.append('N')
print(list)

import math
x=int(input('Ingrese la cantidad de casos que va a trabajar: ',))
n=0
list=[]
while n<x:
  n=n+1
  y=input('Ingrese los números: ').split()
  p=[int(i) for i in y]
  h=math.sqrt(p[0]**2+p[1]**2)
  if p[2]==h:
    list.append('R')
  elif p[2]<h:
    list.append('A')
  else:
    list.append('O')
print(list)

y=(input('Ingrese los números: ').split())
p=[int(i) for i in y]
respuesta=[]
for i in p:
  list=[str(i)]
  j=i*i
  cont=0
  repetido=True

  while repetido:
    k=str(j)
    if cont!=0:
      k= int(k)*int(k)
    while len(str(k))!=8:
      k=str(str(0)+ str(k))
    k=str(k)[2:6]
    
    cont=cont+1
    if k in list:
      repetido = False
    j=int(k)
    list.append(k)

  respuesta.append(str(cont))
print(' '.join(respuesta))

y=(input('Ingrese los números: ').split())
p=[float(i) for i in y]
respuesta=[]
for x in range(len(p)):
  if x == 0 or x == len(p)-1:
    respuesta.append(str(p[x]))
  else:
    smoothNum = (float(p[x-1]) + float(p[x]) + float(p[x+1])) / 3
    respuesta.append(str(smoothNum))
print(' '.join(respuesta))

y=(input('Ingrese los números: ').split())
p=[int(i) for i in y]
respuesta=[]
for x in p:
  a,b,c,cont = 0,1,0,0
  while(c<=x and x!=0):
    c = a + b
    a = b
    b = c
    cont+=1
  respuesta.append(str(count))
print(' '.join(respuesta))

x=int(input('Ingrese la cantidad de casos que va a trabajar: ',))
n=0
list=[]
while n<x:
  n=n+1
  y=input('Ingrese la distancia y las velocidades: ').split()
  p=[int(i) for i in y]
  t=p[0]/(p[2]+p[1])
  d=p[1]*t
  list.append(str(d))
print(' '.join(list))